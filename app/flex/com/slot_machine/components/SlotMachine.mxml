<?xml version="1.0" encoding="utf-8"?>
<s:VGroup
  xmlns:fx="http://ns.adobe.com/mxml/2009"
  xmlns:s="library://ns.adobe.com/flex/spark"
  xmlns:mx="library://ns.adobe.com/flex/mx"
  width="100%">
  <fx:Script>
    <![CDATA[
      import spark.components.Image;
      import spark.components.VGroup;      
      import mx.controls.Alert; 
      import mx.rpc.http.HTTPService; 
      import mx.rpc.events.ResultEvent; 
      import mx.rpc.events.FaultEvent; 
      
      public var _name:String = "default";
      
      private var service:HTTPService 
      private var lines_quantity:uint;

      
      
      private function useHttpService(
        url:String,
        httpResult:Function, 
        params:String = null
      ):void 
      { 
        service = new HTTPService(); 
        service.url = url; 
        service.method = "GET"; 
        service.addEventListener("result", httpResult); 
        service.addEventListener("fault", httpFault); 
        service.send(); 
      } 
 
      private function httpFault(event:FaultEvent):void { 
        var faultstring:String = event.fault.faultString; 
        Alert.show(faultstring); 
      }
      
      private function draw(reels:Array):void {
        const ICONS_PATH:String = "/assets/icons/";
        var newImage:Image;
        var newVGroup:VGroup;
        var i:uint;
        var j:uint;
        
        machine.removeAllElements();
        
        for (i=0; i < reels.length; i++) {
          newVGroup = new VGroup();
          machine.addElement(newVGroup);
          for (j=0; j < lines_quantity; j++) {
            newImage = new Image();
            newImage.source = ICONS_PATH + reels[i][j].image;
            newVGroup.addElement(newImage);
          }
        }
      }
      
      private function loadMachine(event:ResultEvent):void {
        var rawData:String = String(event.result);
        var result:Object = JSON.parse(rawData);
        
        lines_quantity = result.lines_quantity;
        draw(result.reels);
      }
      
      private function spine(event:ResultEvent):void {
        var rawData:String = String(event.result);
        var result:Object = JSON.parse(rawData);
        
        draw(result.result);
        win.text = result.win;
      }
    ]]>
  </fx:Script>

  <s:HGroup id="machine" width="100%" initialize="useHttpService('/machines/load/'+_name, loadMachine);"/>
  <s:HGroup>
    <s:Label text="Win:"/>
    <s:Label id="win" text="0"/>    
  </s:HGroup>
  <s:Button label="Pull the plug!" click="useHttpService('/machines/press_button/'+_name, spine)"/>
  
</s:VGroup>